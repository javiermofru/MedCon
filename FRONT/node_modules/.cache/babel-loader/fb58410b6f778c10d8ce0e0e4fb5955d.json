{"ast":null,"code":"import React, { useContext, createContext, useRef, useEffect, Children, cloneElement, useReducer, useState } from 'react';\nimport cx from 'clsx';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar Context = /*#__PURE__*/createContext({});\n/**\r\n * Access parent ref tracker.\r\n */\n\nfunction useRefTrackerContext() {\n  return useContext(Context);\n}\n\nvar RefTrackerProvider = function RefTrackerProvider(props) {\n  return React.createElement(Context.Provider, {\n    value: props.refTracker\n  }, props.children);\n};\n\nfunction createEventManager() {\n  var eventList = new Map();\n  return {\n    on: function on(event, handler) {\n      var _eventList$get; //eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n\n      eventList.has(event) ? (_eventList$get = eventList.get(event)) == null ? void 0 : _eventList$get.add(handler) : eventList.set(event, new Set([handler]));\n      return this;\n    },\n    off: function off(event, handler) {\n      handler ? eventList.get(event)[\"delete\"](handler) : eventList[\"delete\"](event);\n      return this;\n    },\n    emit: function emit(event, args) {\n      if (process.env.NODE !== 'production') {\n        var currentEv = event;\n\n        if (!eventList.has(event) && currentEv !== 0\n        /* HIDE_ALL */\n        ) {\n          console.error(\"It seems that the menu you are trying to display is not renderer or you have a menu id mismatch.\", \"You used the menu id: \" + event);\n        }\n      }\n\n      eventList.has(event) && eventList.get(event).forEach(function (handler) {\n        handler(args);\n      });\n      return this;\n    }\n  };\n}\n\nvar eventManager = /*#__PURE__*/createEventManager();\n\nfunction usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n/**\r\n * Used to store children refs\r\n */\n\n\nfunction useRefTracker() {\n  return useRef(new Map()).current;\n}\n\nvar contextMenu = {\n  show: function show(_ref) {\n    var id = _ref.id,\n        event = _ref.event,\n        props = _ref.props,\n        position = _ref.position;\n    if (event.preventDefault) event.preventDefault();\n    eventManager.emit(0\n    /* HIDE_ALL */\n    ).emit(id, {\n      event: event.nativeEvent || event,\n      props: props,\n      position: position\n    });\n  },\n  hideAll: function hideAll() {\n    eventManager.emit(0\n    /* HIDE_ALL */\n    );\n  }\n};\n\nfunction useContextMenu(props) {\n  return {\n    show: function show(event, params) {\n      if (process.env.NODE_ENV === 'development') {\n        if (!(props == null ? void 0 : props.id) && !(params == null ? void 0 : params.id)) console.error(\"You need to provide an id when initializing the hook `useContextMenu({ id: 'your id' })` or when you display the menu `show(e, { id: 'your id' })`. The later is used to override the one defined during initialization.\");\n      }\n\n      contextMenu.show({\n        id: (params == null ? void 0 : params.id) || (props == null ? void 0 : props.id),\n        props: (params == null ? void 0 : params.props) || (props == null ? void 0 : props.props),\n        event: event,\n        position: params == null ? void 0 : params.position\n      });\n    },\n    hideAll: function hideAll() {\n      contextMenu.hideAll();\n    }\n  };\n}\n/**\r\n * Used to control keyboard navigation\r\n */\n\n\nfunction createMenuController() {\n  var menuList = new Map();\n  var focusedIndex;\n  var parentNode;\n  var isAtRoot;\n  var currentItems;\n  var forceCloseSubmenu = false;\n\n  function init(rootMenu) {\n    currentItems = rootMenu;\n    focusedIndex = -1;\n    isAtRoot = true;\n  }\n\n  function focusSelectedItem() {\n    currentItems[focusedIndex].node.focus();\n  }\n\n  function isSubmenuFocused() {\n    return focusedIndex >= 0 && currentItems[focusedIndex].isSubmenu;\n  }\n\n  function getSubmenuItems() {\n    return Array.from(currentItems[focusedIndex].submenuRefTracker.values());\n  }\n\n  function isFocused() {\n    if (focusedIndex === -1) {\n      // focus first item\n      moveDown();\n      return false;\n    }\n\n    return true;\n  }\n\n  function moveDown() {\n    if (focusedIndex + 1 < currentItems.length) {\n      focusedIndex++;\n    } else if (focusedIndex + 1 === currentItems.length) {\n      focusedIndex = 0;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n    focusSelectedItem();\n  }\n\n  function moveUp() {\n    if (focusedIndex === -1 || focusedIndex === 0) {\n      focusedIndex = currentItems.length - 1;\n    } else if (focusedIndex - 1 < currentItems.length) {\n      focusedIndex--;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n    focusSelectedItem();\n  }\n\n  function openSubmenu() {\n    if (isFocused() && isSubmenuFocused()) {\n      var submenuItems = getSubmenuItems();\n      var currentNode = currentItems[focusedIndex].node;\n      menuList.set(currentNode, {\n        isRoot: isAtRoot,\n        focusedIndex: focusedIndex,\n        parentNode: parentNode || currentNode,\n        items: currentItems\n      });\n      currentNode.classList.add(\"react-contexify__submenu--is-open\"\n      /* submenuOpen */\n      );\n      parentNode = currentNode;\n\n      if (submenuItems.length > 0) {\n        focusedIndex = 0;\n        currentItems = submenuItems;\n      } else {\n        forceCloseSubmenu = true;\n      }\n\n      isAtRoot = false;\n      focusSelectedItem();\n      return true;\n    }\n\n    return false;\n  }\n\n  function closeSubmenu() {\n    if (isFocused() && !isAtRoot) {\n      var _menuList$get = menuList.get(parentNode),\n          isRoot = _menuList$get.isRoot,\n          items = _menuList$get.items,\n          parentFocusedIndex = _menuList$get.focusedIndex,\n          menuParentNode = _menuList$get.parentNode;\n\n      parentNode.classList.remove(\"react-contexify__submenu--is-open\"\n      /* submenuOpen */\n      );\n      currentItems = items;\n      parentNode = menuParentNode;\n\n      if (isRoot) {\n        isAtRoot = true;\n        menuList.clear();\n      }\n\n      if (!forceCloseSubmenu) {\n        focusedIndex = parentFocusedIndex;\n        focusSelectedItem();\n      }\n    }\n  }\n\n  return {\n    init: init,\n    moveDown: moveDown,\n    moveUp: moveUp,\n    openSubmenu: openSubmenu,\n    closeSubmenu: closeSubmenu\n  };\n}\n\nvar theme = {\n  light: 'light',\n  dark: 'dark'\n};\nvar animation = {\n  fade: 'fade',\n  flip: 'flip',\n  scale: 'scale',\n  slide: 'slide'\n};\n\nvar NOOP = function NOOP() {};\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isTouchEvent(e) {\n  return e.type === 'touchend';\n}\n\nfunction cloneItems(children, props) {\n  return Children.map( // remove null item\n  Children.toArray(children).filter(Boolean), function (item) {\n    return cloneElement(item, props);\n  });\n}\n\nfunction getMousePosition(e) {\n  var pos = {\n    x: 0,\n    y: 0\n  };\n\n  if (isTouchEvent(e) && e.changedTouches && e.changedTouches.length > 0) {\n    pos.x = e.changedTouches[0].clientX;\n    pos.y = e.changedTouches[0].clientY;\n  } else {\n    pos.x = e.clientX;\n    pos.y = e.clientY;\n  }\n\n  if (!pos.x || pos.x < 0) pos.x = 0;\n  if (!pos.y || pos.y < 0) pos.y = 0;\n  return pos;\n}\n\nfunction getPredicateValue(predicate, payload) {\n  return isFn(predicate) ? predicate(payload) : predicate;\n}\n\nfunction hasExitAnimation(animation) {\n  return !!(animation && (isStr(animation) || 'exit' in animation && animation.exit));\n}\n\nfunction reducer(state, payload) {\n  return isFn(payload) ? _extends({}, state, payload(state)) : _extends({}, state, payload);\n}\n\nvar Menu = function Menu(_ref) {\n  var _cx3;\n\n  var id = _ref.id,\n      theme = _ref.theme,\n      style = _ref.style,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$animation = _ref.animation,\n      animation = _ref$animation === void 0 ? 'scale' : _ref$animation,\n      _ref$onHidden = _ref.onHidden,\n      onHidden = _ref$onHidden === void 0 ? NOOP : _ref$onHidden,\n      _ref$onShown = _ref.onShown,\n      onShown = _ref$onShown === void 0 ? NOOP : _ref$onShown,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"id\", \"theme\", \"style\", \"className\", \"children\", \"animation\", \"onHidden\", \"onShown\"]);\n\n  var _useReducer = useReducer(reducer, {\n    x: 0,\n    y: 0,\n    visible: false,\n    triggerEvent: {},\n    propsFromTrigger: null,\n    willLeave: false\n  }),\n      state = _useReducer[0],\n      setState = _useReducer[1];\n\n  var nodeRef = useRef(null);\n  var didMount = useRef(false);\n  var wasVisible = usePrevious(state.visible);\n  var refTracker = useRefTracker();\n\n  var _useState = useState(function () {\n    return createMenuController();\n  }),\n      menuController = _useState[0]; // subscribe event manager\n\n\n  useEffect(function () {\n    didMount.current = true;\n    eventManager.on(id, show).on(0\n    /* HIDE_ALL */\n    , hide);\n    return function () {\n      eventManager.off(id, show).off(0\n      /* HIDE_ALL */\n      , hide);\n    }; // hide rely on setState(dispatch), which is guaranted to be the same across render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]); // handle show/ hide callback\n\n  useEffect(function () {\n    if (didMount.current && state.visible !== wasVisible) {\n      state.visible ? onShown() : onHidden();\n    } // wasWisible is a ref\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [state.visible, onHidden, onShown]); // collect menu items for keyboard navigation\n\n  useEffect(function () {\n    if (!state.visible) {\n      refTracker.clear();\n    } else {\n      menuController.init(Array.from(refTracker.values()));\n    }\n  }, [state.visible, menuController, refTracker]); // compute menu position\n\n  useEffect(function () {\n    if (state.visible) {\n      var _window = window,\n          windowWidth = _window.innerWidth,\n          windowHeight = _window.innerHeight;\n      var _nodeRef$current = nodeRef.current,\n          menuWidth = _nodeRef$current.offsetWidth,\n          menuHeight = _nodeRef$current.offsetHeight;\n      var _x = state.x,\n          _y = state.y;\n\n      if (_x + menuWidth > windowWidth) {\n        _x -= _x + menuWidth - windowWidth;\n      }\n\n      if (_y + menuHeight > windowHeight) {\n        _y -= _y + menuHeight - windowHeight;\n      }\n\n      setState({\n        x: _x,\n        y: _y\n      });\n    } // state.visible and state{x,y} are updated together\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [state.visible]); // subscribe dom events\n\n  useEffect(function () {\n    function handleKeyboard(e) {\n      e.preventDefault();\n\n      switch (e.key) {\n        case 'Enter':\n          if (!menuController.openSubmenu()) hide();\n          break;\n\n        case 'Escape':\n          hide();\n          break;\n\n        case 'ArrowUp':\n          menuController.moveUp();\n          break;\n\n        case 'ArrowDown':\n          menuController.moveDown();\n          break;\n\n        case 'ArrowRight':\n          menuController.openSubmenu();\n          break;\n\n        case 'ArrowLeft':\n          menuController.closeSubmenu();\n          break;\n      }\n    }\n\n    if (state.visible) {\n      window.addEventListener('resize', hide);\n      window.addEventListener('contextmenu', hide);\n      window.addEventListener('click', hide);\n      window.addEventListener('scroll', hide);\n      window.addEventListener('keydown', handleKeyboard); // This let us debug the menu in the console in dev mode\n\n      if (process.env.NODE_ENV !== 'development') {\n        window.addEventListener('blur', hide);\n      }\n    }\n\n    return function () {\n      window.removeEventListener('resize', hide);\n      window.removeEventListener('contextmenu', hide);\n      window.removeEventListener('click', hide);\n      window.removeEventListener('scroll', hide);\n      window.removeEventListener('keydown', handleKeyboard);\n\n      if (process.env.NODE_ENV !== 'development') {\n        window.removeEventListener('blur', hide);\n      }\n    }; // state.visible will let us get the right reference to `hide`\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, menuController]);\n\n  function show(_ref2) {\n    var event = _ref2.event,\n        props = _ref2.props,\n        position = _ref2.position;\n    event.stopPropagation();\n\n    var _ref3 = position || getMousePosition(event),\n        x = _ref3.x,\n        y = _ref3.y; // prevent react from batching the state update\n    // if the menu is already visible we have to recompute bounding rect based on position\n\n\n    setTimeout(function () {\n      setState({\n        visible: true,\n        willLeave: false,\n        x: x,\n        y: y,\n        triggerEvent: event,\n        propsFromTrigger: props\n      });\n    }, 0);\n  }\n\n  function hide(event) {\n    // Safari trigger a click event when you ctrl + trackpad\n    // Firefox:  trigger a click event when right click occur\n    var e = event;\n\n    if (typeof e !== 'undefined' && (e.button === 2 || e.ctrlKey === true) && e.type !== 'contextmenu') {\n      return;\n    }\n\n    hasExitAnimation(animation) ? setState(function (state) {\n      return {\n        willLeave: state.visible\n      };\n    }) : setState(function (state) {\n      return {\n        visible: state.visible ? false : state.visible\n      };\n    });\n  }\n\n  function handleAnimationEnd() {\n    if (state.willLeave && state.visible) {\n      setState({\n        visible: false,\n        willLeave: false\n      });\n    }\n  }\n\n  function computeAnimationClasses() {\n    if (!animation) return null;\n\n    if (isStr(animation)) {\n      var _cx;\n\n      return cx((_cx = {}, _cx[\"react-contexify__will-enter--\"\n      /* animationWillEnter */\n      + animation] = animation && visible && !willLeave, _cx[\"react-contexify__will-leave--\"\n      /* animationWillLeave */\n      + animation + \" \" + \"react-contexify__will-leave--\"\n      /* animationWillLeave */\n      + \"'disabled'\"] = animation && visible && willLeave, _cx));\n    } else if ('enter' in animation && 'exit' in animation) {\n      var _cx2;\n\n      return cx((_cx2 = {}, _cx2[\"react-contexify__will-enter--\"\n      /* animationWillEnter */\n      + animation.enter] = animation.enter && visible && !willLeave, _cx2[\"react-contexify__will-leave--\"\n      /* animationWillLeave */\n      + animation.exit + \" \" + \"react-contexify__will-leave--\"\n      /* animationWillLeave */\n      + \"'disabled'\"] = animation.exit && visible && willLeave, _cx2));\n    }\n\n    return null;\n  }\n\n  var visible = state.visible,\n      triggerEvent = state.triggerEvent,\n      propsFromTrigger = state.propsFromTrigger,\n      x = state.x,\n      y = state.y,\n      willLeave = state.willLeave;\n  var cssClasses = cx(\"react-contexify\"\n  /* menu */\n  , className, (_cx3 = {}, _cx3[\"react-contexify__theme--\"\n  /* theme */\n  + theme] = theme, _cx3), computeAnimationClasses());\n\n  var menuStyle = _extends({}, style, {\n    left: x,\n    top: y,\n    opacity: 1\n  });\n\n  return React.createElement(RefTrackerProvider, {\n    refTracker: refTracker\n  }, visible && React.createElement(\"div\", Object.assign({}, rest, {\n    className: cssClasses,\n    onAnimationEnd: handleAnimationEnd,\n    style: menuStyle,\n    ref: nodeRef,\n    role: \"menu\"\n  }), cloneItems(children, {\n    propsFromTrigger: propsFromTrigger,\n    triggerEvent: triggerEvent\n  })));\n};\n\nvar Item = function Item(_ref) {\n  var _cx;\n\n  var children = _ref.children,\n      className = _ref.className,\n      style = _ref.style,\n      triggerEvent = _ref.triggerEvent,\n      data = _ref.data,\n      propsFromTrigger = _ref.propsFromTrigger,\n      _ref$onClick = _ref.onClick,\n      onClick = _ref$onClick === void 0 ? NOOP : _ref$onClick,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$hidden = _ref.hidden,\n      hidden = _ref$hidden === void 0 ? false : _ref$hidden,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"style\", \"triggerEvent\", \"data\", \"propsFromTrigger\", \"onClick\", \"disabled\", \"hidden\"]);\n\n  var refTracker = useRefTrackerContext();\n  var handlerParams = {\n    data: data,\n    triggerEvent: triggerEvent,\n    props: propsFromTrigger\n  };\n  var isDisabled = getPredicateValue(disabled, handlerParams);\n  var isHidden = getPredicateValue(hidden, handlerParams);\n\n  function handleClick(e) {\n    handlerParams.event = e;\n    isDisabled ? e.stopPropagation() : onClick(handlerParams);\n  }\n\n  function trackRef(node) {\n    if (node && !isDisabled) refTracker.set(node, {\n      node: node,\n      isSubmenu: false\n    });\n  }\n\n  function handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      handlerParams.event = e;\n      onClick(handlerParams);\n    }\n  }\n\n  if (isHidden) return null;\n  var cssClasses = cx(\"react-contexify__item\"\n  /* item */\n  , className, (_cx = {}, _cx[\"react-contexify__item--disabled\"\n  /* itemDisabled */\n  ] = isDisabled, _cx));\n  return React.createElement(\"div\", Object.assign({}, rest, {\n    className: cssClasses,\n    style: style,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    ref: trackRef,\n    tabIndex: -1,\n    role: \"menuitem\",\n    \"aria-disabled\": isDisabled\n  }), React.createElement(\"div\", {\n    className: \"react-contexify__item__content\"\n    /* itemContent */\n\n  }, children));\n};\n\nfunction Separator() {\n  return React.createElement(\"div\", {\n    className: \"react-contexify__separator\"\n    /* separator */\n\n  });\n}\n\nvar Submenu = function Submenu(_ref) {\n  var _cx;\n\n  var _ref$arrow = _ref.arrow,\n      arrow = _ref$arrow === void 0 ? '▶' : _ref$arrow,\n      children = _ref.children,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$hidden = _ref.hidden,\n      hidden = _ref$hidden === void 0 ? false : _ref$hidden,\n      label = _ref.label,\n      className = _ref.className,\n      triggerEvent = _ref.triggerEvent,\n      propsFromTrigger = _ref.propsFromTrigger,\n      style = _ref.style,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"arrow\", \"children\", \"disabled\", \"hidden\", \"label\", \"className\", \"triggerEvent\", \"propsFromTrigger\", \"style\"]);\n\n  var menuRefTracker = useRefTrackerContext();\n  var refTracker = useRefTracker();\n  var nodeRef = useRef(null);\n\n  var _useState = useState({\n    left: '100%',\n    top: 0,\n    bottom: 'initial'\n  }),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var handlerParams = {\n    triggerEvent: triggerEvent,\n    props: propsFromTrigger\n  };\n  var isDisabled = getPredicateValue(disabled, handlerParams);\n  var isHidden = getPredicateValue(hidden, handlerParams);\n  useEffect(function () {\n    if (nodeRef.current) {\n      var _window = window,\n          innerWidth = _window.innerWidth,\n          innerHeight = _window.innerHeight;\n      var rect = nodeRef.current.getBoundingClientRect();\n      var _style = {};\n\n      if (rect.right < innerWidth) {\n        _style.left = '100%';\n        _style.right = undefined;\n      } else {\n        _style.right = '100%';\n        _style.left = undefined;\n      }\n\n      if (rect.bottom > innerHeight) {\n        _style.bottom = 0;\n        _style.top = 'initial';\n      } else {\n        _style.bottom = 'initial';\n      }\n\n      setPosition(_style);\n    }\n  }, []);\n\n  function handleClick(e) {\n    e.stopPropagation();\n  }\n\n  function trackRef(node) {\n    if (node && !isDisabled) menuRefTracker.set(node, {\n      node: node,\n      isSubmenu: true,\n      submenuRefTracker: refTracker\n    });\n  }\n\n  if (isHidden) return null;\n  var cssClasses = cx(\"react-contexify__item\"\n  /* item */\n  , className, (_cx = {}, _cx[\"react-contexify__item--disabled\"\n  /* itemDisabled */\n  ] = isDisabled, _cx));\n\n  var submenuStyle = _extends({}, style, position);\n\n  return React.createElement(RefTrackerProvider, {\n    refTracker: refTracker\n  }, React.createElement(\"div\", Object.assign({}, rest, {\n    className: cssClasses,\n    ref: trackRef,\n    tabIndex: -1,\n    role: \"menuitem\",\n    \"aria-haspopup\": true,\n    \"aria-disabled\": isDisabled\n  }), React.createElement(\"div\", {\n    className: \"react-contexify__item__content\"\n    /* itemContent */\n    ,\n    onClick: handleClick\n  }, label, React.createElement(\"span\", {\n    className: \"react-contexify__submenu-arrow\"\n    /* submenuArrow */\n\n  }, arrow)), React.createElement(\"div\", {\n    className: \"react-contexify react-contexify__submenu\"\n    /* submenu */\n    ,\n    ref: nodeRef,\n    style: submenuStyle\n  }, cloneItems(children, {\n    propsFromTrigger: propsFromTrigger,\n    // injected by the parent\n    triggerEvent: triggerEvent\n  }))));\n};\n\nexport { Item, Menu, Separator, Submenu, animation, contextMenu, theme, useContextMenu };","map":{"version":3,"mappings":"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","names":["Context","createContext","useRefTrackerContext","useContext","RefTrackerProvider","React","Provider","value","props","refTracker","children","createEventManager","eventList","Map","on","event","handler","has","get","_eventList$get","add","set","Set","off","emit","args","process","env","NODE","currentEv","console","error","forEach","eventManager","usePrevious","ref","useRef","useEffect","current","useRefTracker","contextMenu","show","id","position","preventDefault","nativeEvent","hideAll","useContextMenu","params","NODE_ENV","createMenuController","menuList","focusedIndex","parentNode","isAtRoot","currentItems","forceCloseSubmenu","init","rootMenu","focusSelectedItem","node","focus","isSubmenuFocused","isSubmenu","getSubmenuItems","Array","from","submenuRefTracker","values","isFocused","moveDown","length","closeSubmenu","moveUp","openSubmenu","submenuItems","currentNode","isRoot","items","classList","parentFocusedIndex","menuParentNode","remove","clear","theme","light","dark","animation","fade","flip","scale","slide","NOOP","isFn","v","isStr","isTouchEvent","e","type","cloneItems","Children","map","toArray","filter","Boolean","cloneElement","item","getMousePosition","pos","x","y","changedTouches","clientX","clientY","getPredicateValue","predicate","payload","hasExitAnimation","exit","reducer","state","Menu","style","className","_ref$animation","onHidden","onShown","rest","useReducer","visible","triggerEvent","propsFromTrigger","willLeave","setState","nodeRef","didMount","wasVisible","useState","menuController","hide","window","windowWidth","innerWidth","windowHeight","innerHeight","menuWidth","offsetWidth","menuHeight","offsetHeight","handleKeyboard","key","addEventListener","removeEventListener","stopPropagation","setTimeout","button","ctrlKey","handleAnimationEnd","computeAnimationClasses","cx","enter","cssClasses","menuStyle","left","top","opacity","onAnimationEnd","role","Item","data","onClick","disabled","_ref$disabled","hidden","_ref$hidden","handlerParams","isDisabled","isHidden","handleClick","trackRef","handleKeyDown","onKeyDown","tabIndex","Separator","Submenu","arrow","_ref$arrow","label","menuRefTracker","bottom","setPosition","rect","getBoundingClientRect","right","undefined","submenuStyle"],"sources":["C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\components\\RefTrackerProvider.tsx","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\core\\eventManager.ts","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\hooks\\usePrevious.ts","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\hooks\\useRefTracker.ts","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\core\\contextMenu.ts","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\hooks\\useContextMenu.ts","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\components\\menuController.ts","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\constants.ts","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\components\\utils.ts","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\components\\Menu.tsx","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\components\\Item.tsx","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\components\\Separator.tsx","C:\\Users\\teletrabajo\\OneDrive - Universidad Politécnica de Madrid\\UPM\\CUARTO\\SEGUNDO CUATRI\\ISST\\Proyecto\\SPRINT3\\final\\Medcon\\node_modules\\react-contexify\\src\\components\\Submenu.tsx"],"sourcesContent":["import React, { useContext, createContext } from 'react';\nimport { RefTracker } from '../hooks';\n\nconst Context = createContext({} as RefTracker);\n\n/**\n * Access parent ref tracker.\n */\nexport function useRefTrackerContext() {\n  return useContext(Context);\n}\n\nexport interface RefTrackerProviderProps {\n  refTracker: RefTracker;\n}\n\nexport const RefTrackerProvider: React.FC<RefTrackerProviderProps> = props => {\n  return (\n    <Context.Provider value={props.refTracker}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n","import { EVENT } from '../constants';\n\nexport type EventType = string | number | symbol;\nexport type Handler<T = any> = (args: T) => void;\n\nexport interface EventManager<E = EventType> {\n  on<T = any>(event: E, handler: Handler<T>): EventManager<E>;\n  off<T = any>(event: E, handler?: Handler<T>): EventManager<E>;\n  emit<T = any>(event: E, args?: T): EventManager<E>;\n}\n\nfunction createEventManager<E = EventType>(): EventManager<E> {\n  const eventList = new Map<E, Set<Handler>>();\n\n  return {\n    on<T = any>(event: E, handler: Handler<T>) {\n      //eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      eventList.has(event)\n        ? eventList.get(event)?.add(handler)\n        : eventList.set(event, new Set([handler]));\n      return this;\n    },\n    off<T = any>(event: E, handler?: Handler<T>) {\n      handler ? eventList.get(event)!.delete(handler) : eventList.delete(event);\n      return this;\n    },\n    emit<T = any>(event: E, args: T) {\n      if (process.env.NODE !== 'production') {\n        const currentEv = (event as unknown) as number;\n\n        if (!eventList.has(event) && currentEv !== EVENT.HIDE_ALL) {\n          console.error(\n            `It seems that the menu you are trying to display is not renderer or you have a menu id mismatch.`,\n            `You used the menu id: ${event}`\n          );\n        }\n      }\n      eventList.has(event) &&\n        eventList.get(event)!.forEach((handler: Handler<T>) => {\n          handler(args);\n        });\n      return this;\n    },\n  };\n}\n\nexport const eventManager = createEventManager();\n","import { useEffect, useRef } from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","import { useRef } from 'react';\n\nexport interface RefTrackerValue {\n  node: HTMLElement;\n  isSubmenu: boolean;\n  submenuRefTracker?: RefTracker;\n}\n\nexport type RefTracker = ReturnType<typeof useRefTracker>;\n\n/**\n * Used to store children refs\n */\nexport function useRefTracker() {\n  return useRef<Map<HTMLElement, RefTrackerValue>>(new Map()).current;\n}\n","import { eventManager } from './eventManager';\nimport { MenuId, TriggerEvent } from '../types';\nimport { SyntheticEvent } from 'react';\n\nimport { EVENT } from '../constants';\n\nexport interface ShowContextMenuParams {\n  id: MenuId;\n  event: TriggerEvent;\n  props?: any;\n  position?: {\n    x: number;\n    y: number;\n  } | null;\n}\n\nexport interface ContextMenu {\n  show: (params: ShowContextMenuParams) => void;\n  hideAll: () => void;\n}\n\nconst contextMenu: ContextMenu = {\n  show({ id, event, props, position }) {\n    if (event.preventDefault) event.preventDefault();\n\n    eventManager.emit(EVENT.HIDE_ALL).emit(id, {\n      event: (event as SyntheticEvent).nativeEvent || event,\n      props,\n      position,\n    });\n  },\n  hideAll() {\n    eventManager.emit(EVENT.HIDE_ALL);\n  },\n};\n\nexport { contextMenu };\n","import { contextMenu } from '../core';\nimport { ContextMenuParams, TriggerEvent } from '../types';\n\nexport type UseContextMenuProps = Partial<\n  Pick<ContextMenuParams, 'id' | 'props'>\n>;\n\nexport function useContextMenu(props?: UseContextMenuProps) {\n  return {\n    show(event: TriggerEvent, params?: Omit<ContextMenuParams, 'event'>) {\n      if (process.env.NODE_ENV === 'development') {\n        if (!props?.id && !params?.id)\n          console.error(\n            \"You need to provide an id when initializing the hook `useContextMenu({ id: 'your id' })` or when you display the menu `show(e, { id: 'your id' })`. The later is used to override the one defined during initialization.\"\n          );\n      }\n      contextMenu.show({\n        id: (params?.id || props?.id) as string,\n        props: params?.props || props?.props,\n        event: event,\n        position: params?.position,\n      });\n    },\n    hideAll() {\n      contextMenu.hideAll();\n    },\n  };\n}\n","import { RefTrackerValue } from '../hooks';\nimport { STYLE } from '../constants';\n\ninterface Menu<T = RefTrackerValue> {\n  items: T[];\n  isRoot: boolean;\n  focusedIndex: number;\n  parentNode: HTMLElement;\n}\n\n/**\n * Used to control keyboard navigation\n */\nexport function createMenuController() {\n  const menuList = new Map<HTMLElement, Menu>();\n  let focusedIndex: number;\n  let parentNode: HTMLElement;\n  let isAtRoot: boolean;\n  let currentItems: RefTrackerValue[];\n  let forceCloseSubmenu = false;\n\n  function init(rootMenu: RefTrackerValue[]) {\n    currentItems = rootMenu;\n    focusedIndex = -1;\n    isAtRoot = true;\n  }\n\n  function focusSelectedItem() {\n    currentItems[focusedIndex].node.focus();\n  }\n\n  function isSubmenuFocused() {\n    return focusedIndex >= 0 && currentItems[focusedIndex].isSubmenu;\n  }\n\n  function getSubmenuItems() {\n    return Array.from(currentItems[focusedIndex].submenuRefTracker!.values());\n  }\n\n  function isFocused() {\n    if (focusedIndex === -1) {\n      // focus first item\n      moveDown();\n      return false;\n    }\n\n    return true;\n  }\n\n  function moveDown() {\n    if (focusedIndex + 1 < currentItems.length) {\n      focusedIndex++;\n    } else if (focusedIndex + 1 === currentItems.length) {\n      focusedIndex = 0;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n\n    focusSelectedItem();\n  }\n\n  function moveUp() {\n    if (focusedIndex === -1 || focusedIndex === 0) {\n      focusedIndex = currentItems.length - 1;\n    } else if (focusedIndex - 1 < currentItems.length) {\n      focusedIndex--;\n    }\n\n    if (forceCloseSubmenu) closeSubmenu();\n\n    focusSelectedItem();\n  }\n\n  function openSubmenu() {\n    if (isFocused() && isSubmenuFocused()) {\n      const submenuItems = getSubmenuItems();\n      const currentNode = currentItems[focusedIndex].node;\n\n      menuList.set(currentNode, {\n        isRoot: isAtRoot,\n        focusedIndex,\n        parentNode: parentNode || currentNode,\n        items: currentItems,\n      });\n\n      currentNode.classList.add(STYLE.submenuOpen);\n      parentNode = currentNode;\n\n      if (submenuItems.length > 0) {\n        focusedIndex = 0;\n        currentItems = submenuItems;\n      } else {\n        forceCloseSubmenu = true;\n      }\n\n      isAtRoot = false;\n\n      focusSelectedItem();\n      return true;\n    }\n    return false;\n  }\n\n  function closeSubmenu() {\n    if (isFocused() && !isAtRoot) {\n      const {\n        isRoot,\n        items,\n        focusedIndex: parentFocusedIndex,\n        parentNode: menuParentNode,\n      } = menuList.get(parentNode)!;\n\n      parentNode.classList.remove(STYLE.submenuOpen);\n\n      currentItems = items;\n      parentNode = menuParentNode;\n\n      if (isRoot) {\n        isAtRoot = true;\n        menuList.clear();\n      }\n      if (!forceCloseSubmenu) {\n        focusedIndex = parentFocusedIndex;\n        focusSelectedItem();\n      }\n    }\n  }\n\n  return {\n    init,\n    moveDown,\n    moveUp,\n    openSubmenu,\n    closeSubmenu,\n  };\n}\n","/*\n * css classes mapping\n * */\nexport const enum STYLE {\n  menu = 'react-contexify',\n  submenu = 'react-contexify react-contexify__submenu',\n  submenuArrow = 'react-contexify__submenu-arrow',\n  submenuOpen = 'react-contexify__submenu--is-open',\n  separator = 'react-contexify__separator',\n  item = 'react-contexify__item',\n  itemDisabled = 'react-contexify__item--disabled',\n  itemContent = 'react-contexify__item__content',\n  theme = 'react-contexify__theme--',\n  animationWillEnter = 'react-contexify__will-enter--',\n  animationWillLeave = 'react-contexify__will-leave--',\n}\n\nexport const enum EVENT {\n  HIDE_ALL,\n}\n\nexport const theme = {\n  light: 'light',\n  dark: 'dark',\n};\n\nexport const animation = {\n  fade: 'fade',\n  flip: 'flip',\n  scale: 'scale',\n  slide: 'slide',\n};\n\nexport const NOOP = () => {};\n","import { Children, cloneElement, ReactNode, ReactElement } from 'react';\n\nimport {\n  BooleanPredicate,\n  PredicateParams,\n  MenuAnimation,\n  TriggerEvent,\n} from '../types';\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isTouchEvent(e: TriggerEvent): e is TouchEvent {\n  return e.type === 'touchend';\n}\n\nexport function cloneItems(\n  children: ReactNode,\n  props: { triggerEvent: TriggerEvent; propsFromTrigger?: object }\n) {\n  return Children.map(\n    // remove null item\n    Children.toArray(children).filter(Boolean),\n    item => cloneElement(item as ReactElement<any>, props)\n  );\n}\n\nexport function getMousePosition(e: TriggerEvent) {\n  const pos = {\n    x: 0,\n    y: 0,\n  };\n\n  if (isTouchEvent(e) && e.changedTouches && e.changedTouches.length > 0) {\n    pos.x = e.changedTouches[0].clientX;\n    pos.y = e.changedTouches[0].clientY;\n  } else {\n    pos.x = (e as MouseEvent).clientX;\n    pos.y = (e as MouseEvent).clientY;\n  }\n\n  if (!pos.x || pos.x < 0) pos.x = 0;\n\n  if (!pos.y || pos.y < 0) pos.y = 0;\n\n  return pos;\n}\n\nexport function getPredicateValue(\n  predicate: BooleanPredicate,\n  payload: PredicateParams\n) {\n  return isFn(predicate) ? predicate(payload) : predicate;\n}\n\nexport function hasExitAnimation(animation: MenuAnimation) {\n  return !!(\n    animation &&\n    (isStr(animation) || ('exit' in animation && animation.exit))\n  );\n}\n","/* global: window */\nimport React, {\n  ReactNode,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport cx from 'clsx';\n\nimport { RefTrackerProvider } from './RefTrackerProvider';\n\nimport { eventManager } from '../core/eventManager';\nimport {\n  TriggerEvent,\n  MenuId,\n  ContextMenuParams,\n  MenuAnimation,\n} from '../types';\nimport { usePrevious, useRefTracker } from '../hooks';\nimport { createMenuController } from './menuController';\nimport { NOOP, STYLE, EVENT } from '../constants';\nimport {\n  cloneItems,\n  getMousePosition,\n  hasExitAnimation,\n  isFn,\n  isStr,\n} from './utils';\n\nexport interface MenuProps\n  extends Omit<React.HTMLAttributes<HTMLElement>, 'id'> {\n  /**\n   * Unique id to identify the menu. Use to Trigger the corresponding menu\n   */\n  id: MenuId;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Theme is appended to `react-contexify__theme--${given theme}`.\n   *\n   * Built-in theme are `light` and `dark`\n   */\n  theme?: string;\n\n  /**\n   * Animation is appended to\n   * - `.react-contexify__will-enter--${given animation}`\n   * - `.react-contexify__will-leave--${given animation}`\n   *\n   * - To disable all animations you can pass `false`\n   * - To disable only the enter or the exit animation you can provide an object `{enter: false, exit: 'exitAnimation'}`\n   *\n   * - default is set to `scale`\n   *\n   * To use the built-in animation a helper in available\n   * `import { animation } from 'react-contexify`\n   *\n   * animation.fade\n   */\n  animation?: MenuAnimation;\n\n  /**\n   * Invoked after the menu is visible.\n   */\n  onShown?: () => void;\n\n  /**\n   * Invoked after the menu has been hidden.\n   */\n  onHidden?: () => void;\n}\n\ninterface MenuState {\n  x: number;\n  y: number;\n  visible: boolean;\n  triggerEvent: TriggerEvent;\n  propsFromTrigger: any;\n  willLeave: boolean;\n}\n\nfunction reducer(\n  state: MenuState,\n  payload: Partial<MenuState> | ((state: MenuState) => Partial<MenuState>)\n) {\n  return isFn(payload)\n    ? { ...state, ...payload(state) }\n    : { ...state, ...payload };\n}\n\nexport const Menu: React.FC<MenuProps> = ({\n  id,\n  theme,\n  style,\n  className,\n  children,\n  animation = 'scale',\n  onHidden = NOOP,\n  onShown = NOOP,\n  ...rest\n}) => {\n  const [state, setState] = useReducer(reducer, {\n    x: 0,\n    y: 0,\n    visible: false,\n    triggerEvent: {} as TriggerEvent,\n    propsFromTrigger: null,\n    willLeave: false,\n  });\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const didMount = useRef(false);\n  const wasVisible = usePrevious(state.visible);\n  const refTracker = useRefTracker();\n  const [menuController] = useState(() => createMenuController());\n\n  // subscribe event manager\n  useEffect(() => {\n    didMount.current = true;\n    eventManager.on(id, show).on(EVENT.HIDE_ALL, hide);\n\n    return () => {\n      eventManager.off(id, show).off(EVENT.HIDE_ALL, hide);\n    };\n    // hide rely on setState(dispatch), which is guaranted to be the same across render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // handle show/ hide callback\n  useEffect(() => {\n    if (didMount.current && state.visible !== wasVisible) {\n      state.visible ? onShown() : onHidden();\n    }\n    // wasWisible is a ref\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, onHidden, onShown]);\n\n  // collect menu items for keyboard navigation\n  useEffect(() => {\n    if (!state.visible) {\n      refTracker.clear();\n    } else {\n      menuController.init(Array.from(refTracker.values()));\n    }\n  }, [state.visible, menuController, refTracker]);\n\n  // compute menu position\n  useEffect(() => {\n    if (state.visible) {\n      const { innerWidth: windowWidth, innerHeight: windowHeight } = window;\n      const {\n        offsetWidth: menuWidth,\n        offsetHeight: menuHeight,\n      } = nodeRef.current!;\n      let { x, y } = state;\n\n      if (x + menuWidth > windowWidth) {\n        x -= x + menuWidth - windowWidth;\n      }\n\n      if (y + menuHeight > windowHeight) {\n        y -= y + menuHeight - windowHeight;\n      }\n\n      setState({\n        x,\n        y,\n      });\n    }\n\n    // state.visible and state{x,y} are updated together\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible]);\n\n  // subscribe dom events\n  useEffect(() => {\n    function handleKeyboard(e: KeyboardEvent) {\n      e.preventDefault();\n      switch (e.key) {\n        case 'Enter':\n          if (!menuController.openSubmenu()) hide();\n          break;\n        case 'Escape':\n          hide();\n          break;\n        case 'ArrowUp':\n          menuController.moveUp();\n          break;\n        case 'ArrowDown':\n          menuController.moveDown();\n          break;\n        case 'ArrowRight':\n          menuController.openSubmenu();\n          break;\n        case 'ArrowLeft':\n          menuController.closeSubmenu();\n          break;\n      }\n    }\n\n    if (state.visible) {\n      window.addEventListener('resize', hide);\n      window.addEventListener('contextmenu', hide);\n      window.addEventListener('click', hide);\n      window.addEventListener('scroll', hide);\n      window.addEventListener('keydown', handleKeyboard);\n\n      // This let us debug the menu in the console in dev mode\n      if (process.env.NODE_ENV !== 'development') {\n        window.addEventListener('blur', hide);\n      }\n    }\n\n    return () => {\n      window.removeEventListener('resize', hide);\n      window.removeEventListener('contextmenu', hide);\n      window.removeEventListener('click', hide);\n      window.removeEventListener('scroll', hide);\n      window.removeEventListener('keydown', handleKeyboard);\n\n      if (process.env.NODE_ENV !== 'development') {\n        window.removeEventListener('blur', hide);\n      }\n    };\n    // state.visible will let us get the right reference to `hide`\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.visible, menuController]);\n\n  function show({ event, props, position }: ContextMenuParams) {\n    event.stopPropagation();\n    const { x, y } = position || getMousePosition(event);\n\n    // prevent react from batching the state update\n    // if the menu is already visible we have to recompute bounding rect based on position\n    setTimeout(() => {\n      setState({\n        visible: true,\n        willLeave: false,\n        x,\n        y,\n        triggerEvent: event,\n        propsFromTrigger: props,\n      });\n    }, 0);\n  }\n\n  function hide(event?: Event) {\n    // Safari trigger a click event when you ctrl + trackpad\n    // Firefox:  trigger a click event when right click occur\n    const e = event as KeyboardEvent & MouseEvent;\n\n    if (\n      typeof e !== 'undefined' &&\n      (e.button === 2 || e.ctrlKey === true) &&\n      e.type !== 'contextmenu'\n    ) {\n      return;\n    }\n\n    hasExitAnimation(animation)\n      ? setState(state => ({ willLeave: state.visible }))\n      : setState(state => ({ visible: state.visible ? false : state.visible }));\n  }\n\n  function handleAnimationEnd() {\n    if (state.willLeave && state.visible) {\n      setState({ visible: false, willLeave: false });\n    }\n  }\n\n  function computeAnimationClasses() {\n    if (!animation) return null;\n\n    if (isStr(animation)) {\n      return cx({\n        [`${STYLE.animationWillEnter}${animation}`]:\n          animation && visible && !willLeave,\n        [`${STYLE.animationWillLeave}${animation} ${STYLE.animationWillLeave}'disabled'`]:\n          animation && visible && willLeave,\n      });\n    } else if ('enter' in animation && 'exit' in animation) {\n      return cx({\n        [`${STYLE.animationWillEnter}${animation.enter}`]:\n          animation.enter && visible && !willLeave,\n        [`${STYLE.animationWillLeave}${animation.exit} ${STYLE.animationWillLeave}'disabled'`]:\n          animation.exit && visible && willLeave,\n      });\n    }\n\n    return null;\n  }\n\n  const { visible, triggerEvent, propsFromTrigger, x, y, willLeave } = state;\n  const cssClasses = cx(\n    STYLE.menu,\n    className,\n    { [`${STYLE.theme}${theme}`]: theme },\n    computeAnimationClasses()\n  );\n\n  const menuStyle = {\n    ...style,\n    left: x,\n    top: y,\n    opacity: 1,\n  };\n\n  return (\n    <RefTrackerProvider refTracker={refTracker}>\n      {visible && (\n        <div\n          {...rest}\n          className={cssClasses}\n          onAnimationEnd={handleAnimationEnd}\n          style={menuStyle}\n          ref={nodeRef}\n          role=\"menu\"\n        >\n          {cloneItems(children, {\n            propsFromTrigger,\n            triggerEvent,\n          })}\n        </div>\n      )}\n    </RefTrackerProvider>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport cx from 'clsx';\n\nimport {\n  ItemParams,\n  InternalProps,\n  BooleanPredicate,\n  HandlerParamsEvent,\n} from '../types';\nimport { useRefTrackerContext } from './RefTrackerProvider';\nimport { NOOP, STYLE } from '../constants';\nimport { getPredicateValue } from './utils';\n\nexport interface ItemProps\n  extends InternalProps,\n    Omit<React.HTMLAttributes<HTMLElement>, 'hidden' | 'disabled' | 'onClick'> {\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Passed to the `Item` onClick callback. Accessible via `data`\n   */\n  data?: any;\n\n  /**\n   * Disable `Item`. If a function is used, a boolean must be returned\n   *\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   *\n   * ```\n   * function isItemDisabled({ triggerEvent, props, data }: PredicateParams<type of props, type of data>): boolean\n   * <Item disabled={isItemDisabled} data={data}>content</Item>\n   * ```\n   */\n  disabled?: BooleanPredicate;\n\n  /**\n   * Hide the `Item`. If a function is used, a boolean must be returned\n   *\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   *\n   * ```\n   * function isItemHidden({ triggerEvent, props, data }: PredicateParams<type of props, type of data>): boolean\n   * <Item hidden={isItemHidden} data={data}>content</Item>\n   * ```\n   */\n  hidden?: BooleanPredicate;\n\n  /**\n   * Callback when the `Item` is clicked.\n   *\n   * @param event The event that occured on the Item node\n   * @param props The props passed when you called `show(e, {props: yourProps})`\n   * @param data The data defined on the `Item`\n   * @param triggerEvent The event that triggered the context menu\n   *\n   * ```\n   * function handleItemClick({ triggerEvent, event, props, data }: ItemParams<type of props, type of data>){\n   *    // retrieve the id of the Item or any other dom attribute\n   *    const id = e.currentTarget.id;\n   *\n   *    // access the props and the data\n   *    console.log(props, data);\n   *\n   *    // access the coordinate of the mouse when the menu has been displayed\n   *    const {  clientX, clientY } = triggerEvent;\n   *\n   * }\n   *\n   * <Item id=\"item-id\" onClick={handleItemClick} data={{key: 'value'}}>Something</Item>\n   * ```\n   */\n  onClick?: (args: ItemParams) => void;\n}\n\nexport const Item: React.FC<ItemProps> = ({\n  children,\n  className,\n  style,\n  triggerEvent,\n  data,\n  propsFromTrigger,\n  onClick = NOOP,\n  disabled = false,\n  hidden = false,\n  ...rest\n}) => {\n  const refTracker = useRefTrackerContext();\n  const handlerParams = {\n    data,\n    triggerEvent: triggerEvent as HandlerParamsEvent,\n    props: propsFromTrigger,\n  };\n  const isDisabled = getPredicateValue(disabled, handlerParams);\n  const isHidden = getPredicateValue(hidden, handlerParams);\n\n  function handleClick(e: React.MouseEvent<HTMLElement>) {\n    (handlerParams as ItemParams).event = e;\n    isDisabled ? e.stopPropagation() : onClick(handlerParams as ItemParams);\n  }\n\n  function trackRef(node: HTMLElement | null) {\n    if (node && !isDisabled)\n      refTracker.set(node, {\n        node,\n        isSubmenu: false,\n      });\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLElement>) {\n    if (e.key === 'Enter') {\n      (handlerParams as ItemParams).event = e;\n      onClick(handlerParams as ItemParams);\n    }\n  }\n\n  if (isHidden) return null;\n\n  const cssClasses = cx(STYLE.item, className, {\n    [`${STYLE.itemDisabled}`]: isDisabled,\n  });\n\n  return (\n    <div\n      {...rest}\n      className={cssClasses}\n      style={style}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={trackRef}\n      tabIndex={-1}\n      role=\"menuitem\"\n      aria-disabled={isDisabled}\n    >\n      <div className={STYLE.itemContent}>{children}</div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { STYLE } from '../constants';\n\nexport function Separator() {\n  return <div className={STYLE.separator} />;\n}\n","import React, { ReactNode, useEffect, useRef, useState } from 'react';\nimport cx from 'clsx';\n\nimport { InternalProps, BooleanPredicate, HandlerParamsEvent } from '../types';\nimport { RefTrackerProvider, useRefTrackerContext } from './RefTrackerProvider';\nimport { useRefTracker } from '../hooks';\nimport { STYLE } from '../constants';\nimport { cloneItems, getPredicateValue } from './utils';\n\nexport interface SubMenuProps\n  extends InternalProps,\n    Omit<React.HTMLAttributes<HTMLElement>, 'hidden'> {\n  /**\n   * Any valid node that can be rendered\n   */\n  label: ReactNode;\n\n  /**\n   * Any valid node that can be rendered\n   */\n  children: ReactNode;\n\n  /**\n   * Render a custom arrow\n   */\n  arrow?: ReactNode;\n\n  /**\n   * Disable the `Submenu`. If a function is used, a boolean must be returned\n   */\n  disabled?: BooleanPredicate;\n\n  /**\n   * Hide the `Submenu` and his children. If a function is used, a boolean must be returned\n   */\n  hidden?: BooleanPredicate;\n}\n\ninterface SubMenuState {\n  left?: string | number;\n  right?: string | number;\n  top?: string | number;\n  bottom?: string | number;\n}\n\nexport const Submenu: React.FC<SubMenuProps> = ({\n  arrow = '▶',\n  children,\n  disabled = false,\n  hidden = false,\n  label,\n  className,\n  triggerEvent,\n  propsFromTrigger,\n  style,\n  ...rest\n}) => {\n  const menuRefTracker = useRefTrackerContext();\n  const refTracker = useRefTracker();\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const [position, setPosition] = useState<SubMenuState>({\n    left: '100%',\n    top: 0,\n    bottom: 'initial',\n  });\n  const handlerParams = {\n    triggerEvent: triggerEvent as HandlerParamsEvent,\n    props: propsFromTrigger,\n  };\n  const isDisabled = getPredicateValue(disabled, handlerParams);\n  const isHidden = getPredicateValue(hidden, handlerParams);\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const { innerWidth, innerHeight } = window;\n      const rect = nodeRef.current.getBoundingClientRect();\n      const style: SubMenuState = {};\n\n      if (rect.right < innerWidth) {\n        style.left = '100%';\n        style.right = undefined;\n      } else {\n        style.right = '100%';\n        style.left = undefined;\n      }\n\n      if (rect.bottom > innerHeight) {\n        style.bottom = 0;\n        style.top = 'initial';\n      } else {\n        style.bottom = 'initial';\n      }\n\n      setPosition(style);\n    }\n  }, []);\n\n  function handleClick(e: React.SyntheticEvent) {\n    e.stopPropagation();\n  }\n\n  function trackRef(node: HTMLElement | null) {\n    if (node && !isDisabled)\n      menuRefTracker.set(node, {\n        node,\n        isSubmenu: true,\n        submenuRefTracker: refTracker,\n      });\n  }\n\n  if (isHidden) return null;\n\n  const cssClasses = cx(STYLE.item, className, {\n    [`${STYLE.itemDisabled}`]: isDisabled,\n  });\n\n  const submenuStyle = {\n    ...style,\n    ...position,\n  };\n\n  return (\n    <RefTrackerProvider refTracker={refTracker}>\n      <div\n        {...rest}\n        className={cssClasses}\n        ref={trackRef}\n        tabIndex={-1}\n        role=\"menuitem\"\n        aria-haspopup\n        aria-disabled={isDisabled}\n      >\n        <div className={STYLE.itemContent} onClick={handleClick}>\n          {label}\n          <span className={STYLE.submenuArrow}>{arrow}</span>\n        </div>\n        <div className={STYLE.submenu} ref={nodeRef} style={submenuStyle}>\n          {cloneItems(children, {\n            propsFromTrigger,\n            // injected by the parent\n            triggerEvent: triggerEvent!,\n          })}\n        </div>\n      </div>\n    </RefTrackerProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}